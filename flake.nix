{
  description = "hyprhito - —É—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∏—Å–ø–ª–µ–µ–º –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –∫—Ä—ã—à–∫–∏ –Ω–æ—É—Ç–±—É–∫–∞";

  inputs = {
    nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";
    flake-utils.url = "github:numtide/flake-utils";
  };

  outputs = { self, nixpkgs, flake-utils }:
    let
      # –û–±—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–∫–µ—Ç–∞
      mkHyprhito = pkgs: pkgs.callPackage ./default.nix {};
      
      # NixOS –º–æ–¥—É–ª—å
      nixosModules.hyprhito = import ./nixos-module.nix;
      
      # –ú–æ–¥—É–ª—å –¥–ª—è home-manager (—É—Å—Ç–∞—Ä–µ–ª - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ NixOS –º–æ–¥—É–ª—å)
      homeManagerModules.hyprhito = { config, lib, pkgs, ... }:
        with lib;
        let cfg = config.services.hyprhito;
        in {
          options.services.hyprhito = {
            enable = mkEnableOption "hyprhito laptop lid display manager (deprecated - use NixOS module instead)";
          };
          
          config = mkIf cfg.enable {
            # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –º–æ–¥—É–ª—å —É—Å—Ç–∞—Ä–µ–ª
            warnings = [
              "services.hyprhito –≤ home-manager —É—Å—Ç–∞—Ä–µ–ª. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ NixOS –º–æ–¥—É–ª—å –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞."
            ];
            
            # –ü—Ä–æ—Å—Ç–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–∞ –±–µ–∑ —Å–µ—Ä–≤–∏—Å–∞
            home.packages = [ (mkHyprhito pkgs) ];
          };
        };
        
    in
    # Per-system outputs
    (flake-utils.lib.eachDefaultSystem (system:
      let
        pkgs = nixpkgs.legacyPackages.${system};
        hyprhito = mkHyprhito pkgs;
      in
      {
        packages = {
          default = hyprhito;
          hyprhito = hyprhito;
        };

        devShells.default = pkgs.mkShell {
          buildInputs = with pkgs; [
            # Rust toolchain
            rustc
            cargo
            rustfmt
            clippy
            rust-analyzer
            
            # Development tools
            pkg-config
            
            # System libraries
            systemd
            
            # Debugging tools
            strace
            gdb
          ];

          RUST_BACKTRACE = "1";
          
          shellHook = ''
            echo "ü¶Ä –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ hyprhito!"
            echo "üì¶ Rust –≤–µ—Ä—Å–∏—è: $(rustc --version)"
            echo "‚öôÔ∏è  Cargo –≤–µ—Ä—Å–∏—è: $(cargo --version)"
            echo ""
            echo "üí° –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
            echo "   cargo build          - –°–æ–±—Ä–∞—Ç—å –ø—Ä–æ–µ–∫—Ç"
            echo "   cargo run            - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç"
            echo "   cargo test           - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã"
            echo "   cargo clippy         - –ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∞"
            echo "   cargo fmt            - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞"
            echo "   nix build            - –°–æ–±—Ä–∞—Ç—å –ø–∞–∫–µ—Ç —á–µ—Ä–µ–∑ Nix"
            echo "   nix run              - –ó–∞–ø—É—Å—Ç–∏—Ç—å —á–µ—Ä–µ–∑ Nix"
            echo ""
          '';
        };

        apps.default = flake-utils.lib.mkApp {
          drv = hyprhito;
        };
      }))
    //
    # Global outputs
    {
      # NixOS –º–æ–¥—É–ª–∏
      inherit nixosModules;
      
      # Home Manager –º–æ–¥—É–ª–∏  
      inherit homeManagerModules;
      
      # Overlay –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–∞–∫–µ—Ç–∞ –≤ nixpkgs
      overlays.default = final: prev: {
        hyprhito = mkHyprhito final;
      };
    };
}
